// Code generated by mockery v2.53.3. DO NOT EDIT.

package wal

import mock "github.com/stretchr/testify/mock"

// MockLogsWriter is an autogenerated mock type for the LogsWriter type
type MockLogsWriter struct {
	mock.Mock
}

type MockLogsWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockLogsWriter) EXPECT() *MockLogsWriter_Expecter {
	return &MockLogsWriter_Expecter{mock: &_m.Mock}
}

// Write provides a mock function with given fields: _a0
func (_m *MockLogsWriter) Write(_a0 []Command) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]Command) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockLogsWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type MockLogsWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - _a0 []Command
func (_e *MockLogsWriter_Expecter) Write(_a0 interface{}) *MockLogsWriter_Write_Call {
	return &MockLogsWriter_Write_Call{Call: _e.mock.On("Write", _a0)}
}

func (_c *MockLogsWriter_Write_Call) Run(run func(_a0 []Command)) *MockLogsWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]Command))
	})
	return _c
}

func (_c *MockLogsWriter_Write_Call) Return(_a0 error) *MockLogsWriter_Write_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockLogsWriter_Write_Call) RunAndReturn(run func([]Command) error) *MockLogsWriter_Write_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockLogsWriter creates a new instance of MockLogsWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLogsWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLogsWriter {
	mock := &MockLogsWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
